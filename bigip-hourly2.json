{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersionCompute": {
      "type": "string",
      "metadata": {
        "description": "The compute api version"
      }
    },
    "apiVersionNetwork": {
      "type": "string",
      "metadata": {
        "description": "The network api version"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "metadata": {
        "description": "The number of F5 BIG-IPs that will be deployed as federation servers."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The Azure location hosting the resource"
      }
    },
    "loadBalancerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the load balancer resource"
      }
    },
    "lbId": {
      "type": "string",
      "metadata": {
        "description": "The load balancer resource Id"
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The subnet Id"
      }
    },
    "bigipNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The bigip name prefix"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The admin account username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The admin account passowrd"
      }
    },
    "authenticationType": {
      "type": "string",
      "metadata": {
        "description": "Authentication method utilizeda"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "The ssh public key"
      }
    },
    "instanceType": {
      "type": "string",
      "metadata": {
        "description": "The bigip instance size"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The bigip availability set"
      }
    },
    "nsgId": {
      "type": "string",
      "metadata": {
        "description": "The NSG Id"
      }
    },
    "asId": {
      "type": "string",
      "metadata": {
        "description": "The availability set id"
      }
    },
    "nicNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The network interface id"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "vhd storage file"
      }
    },
    "runScriptsUrl": {
      "type": "string",
      "metadata": {
        "description": "URL for nested templates"
      }
    },
    "f5CloudLibsTagUrl": {
      "type": "string",
      "metadata": {
        "description": "Cloudlibs Url Tage"
      }
    },
    "f5CloudLibsTag": {
      "type": "string",
      "metadata": {
        "description": "Tag for F5 CloudLibs "
      }
    },
    "installCloudLibs": {
      "type": "string",
      "metadata": {
        "description": "Cloudlibs install command "
      }
    },
    "verifyHash": {
      "type": "string",
      "metadata": {
        "description": "Cloudlibs file hash"
      }
    },
    "singleQuote": {
      "type": "string",
      "metadata": {
        "description": "a single quote"
      }
    },
    "domainFqdn": {
      "type": "string",
      "metadata": {
        "description": "Federation Domaain Name"
      }
    },
    "commandArgs": {
      "type": "string",
      "metadata": {
        "description": "IApp Deployment script command argurments string"
      }
    },
    "scriptLoc": {
      "type": "string",
      "metadata": {
        "description": "URL location for run script"
      }
    },
    "ipPrefix": {
      "type": "string",
      "metadata": {
        "description": "Self IP address prefix"
      }
    },
    "lastOctet": {
      "type": "int",
      "metadata": {
        "description": "Last octet of first BIGIP"
      }
    },
    "imageName": {
      "type": "string",
      "metadata": {
        "description": "F5 image to deploy"
      }
    }
  },
  "variables": {
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "osProfileChosen": "[concat('osProfile', parameters('authenticationType'))]",
    "osProfilesshPublicKey": {
      "computerName": "[parameters('bigipNamePrefix')]",
      "adminUsername": "[parameters('adminUsername')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "keyData": "[parameters('sshPublicKey')]",
              "path": "[variables('sshKeyPath')]"
            }
          ]
        }
      }
    },
    "osProfilepassword": {
      "computerName": "[parameters('bigipNamePrefix')]",
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]"
    }
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiVersionNetwork')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicNamePrefix'),copyindex(1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
      ],
      "copy": {
        "count": "[parameters('numberOfInstances')]",
        "name": "niccopy"
      },
      "properties": {
        "networkSecurityGroup": {
           "id": "[parameters('nsgID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(parameters('ipPrefix'),add(parameters('lastOctet'),copyIndex()))]",
              "subnet": {
                "id": "[parameters('subnetId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(parameters('lbId'), '/backendAddressPools/', 'loadBalancerBackEnd')]"
                }
              ],

              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(parameters('lbId'), '/inboundNatRules/', 'sshmgt',copyIndex(1))]"
                },
                {
                  "id": "[concat(parameters('lbId'), '/inboundNatRules/', 'guimgt',copyIndex(1))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersionCompute')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('bigipNamePrefix'),copyindex(1))]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[concat(parameters('bigipNamePrefix'),copyindex(1))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',concat(parameters('nicNamePrefix'),'1'))]",
        "[concat('Microsoft.Network/networkInterfaces/',concat(parameters('nicNamePrefix'),'2'))]"
      ],
      "copy": {
        "count": "[parameters('numberOfInstances')]",
        "name": "bigipcopy"
      },
      "plan": {
        "name": "[parameters('imageName')]",
        "publisher": "f5-networks",
        "product": "f5-big-ip-hourly"
      },
      "properties": {
        "availabilitySet": {
          "id": "[parameters('asId')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "osProfile": "[variables(variables('osProfileChosen'))]",
        "storageProfile": {
          "imageReference": {
            "publisher": "f5-networks",
            "offer": "f5-big-ip-hourly",
            "sku": "[parameters('imageName')]",
            "version": "12.1.22"
          },
          "osDisk": {
            "name": "[concat('osdisk',parameters('bigipNamePrefix'),copyindex(1))]",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('newStorageAccountName'),'/osDisk',copyindex(1),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex(1)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('newstorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('bigipNamePrefix'),'1','/start')]",
      "apiVersion": "[parameters('apiVersionCompute')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('bigipNamePrefix'),'1'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "autoUpgradeMinorVersion": true,
        "typeHandlerVersion": "2.0",
        "settings": {
          "fileUris": [
            "[parameters('runScriptsUrl')]",
            "[parameters('f5CloudLibsTagUrl')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('cp f5-cloud-libs.tar.gz* /config; /usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; /usr/bin/install -b -m 400 /dev/null /config/mypass; IFS=', parameters('singleQuote'), '%', parameters('singleQuote'), '; echo -e ', parameters('verifyHash'), ' >> /config/verifyHash; echo -e ', parameters('installCloudLibs'), ' >> /config/installCloudLibs.sh; echo -e ', parameters('adminPassword'), ' >> /config/mypass; unset IFS; bash /config/installCloudLibs.sh; /usr/bin/f5-rest-node /config/f5-cloud-libs/scripts/azure/runScripts.js --log-level debug --onboard \" --output /var/log/onboard.log --log-level debug --host ', reference(concat(parameters('nicNamePrefix'),'1')).ipConfigurations[0].properties.privateIpAddress, ' -u admin --password-url file:///config/mypass --hostname ', concat(parameters('bigipNamePrefix'),'1', '.', parameters('domainFqdn')), ' --ntp pool.ntp.org --db provision.1nicautoconfig:disable --db tmm.maxremoteloglength:2048 --module ltm:nominal --module asm:nominal --module afm:none --module apm:nominal --signal ONBOARD_DONE \" --cluster \" --wait-for ONBOARD_DONE --output /var/log/clusterGroup.log --log-level debug --host ', reference(concat(parameters('nicNamePrefix'),'1')).ipConfigurations[0].properties.privateIpAddress, ' -u admin --password-url file:///config/mypass --create-group --device-group Sync --sync-type sync-failover --device ', concat(parameters('bigipNamePrefix'),'1', '.', parameters('domainFqdn')), ' --auto-sync --save-on-auto-sync --asm-sync --config-sync-ip ', reference(concat(parameters('nicNamePrefix'),'1')).ipConfigurations[0].properties.privateIpAddress,' --signal CLUSTER_DONE \" --script \" --wait-for CLUSTER_DONE --output /var/log/runScript.log --log-level debug --url ',parameters('scriptLoc'),' --cl-args ', parameters('singleQuote'),'-i ', reference(concat(parameters('nicNamePrefix'),'1')).ipConfigurations[0].properties.privateIpAddress, parameters('commandArgs'), parameters('singleQuote'), ' --signal SCRIPT_DONE \"')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('bigipNamePrefix'),copyIndex(2),'/start')]",
      "apiVersion": "[parameters('apiVersionCompute')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('bigipNamePrefix'),copyIndex(2)))]"
      ],
      "copy": {
        "count": "[sub(parameters('numberOfInstances'),1)]",
        "name": "bigipcopy"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "autoUpgradeMinorVersion": true,
        "typeHandlerVersion": "2.0",
        "settings": {
          "fileUris": [
            "[parameters('runScriptsUrl')]",
            "[parameters('f5CloudLibsTagUrl')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('cp f5-cloud-libs.tar.gz* /config; /usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; /usr/bin/install -b -m 400 /dev/null /config/mypass; IFS=', parameters('singleQuote'), '%', parameters('singleQuote'), '; echo -e ', parameters('verifyHash'), ' >> /config/verifyHash; echo -e ', parameters('installCloudLibs'), ' >> /config/installCloudLibs.sh; echo -e ', parameters('adminPassword'), ' >> /config/mypass; unset IFS; bash /config/installCloudLibs.sh; /usr/bin/f5-rest-node /config/f5-cloud-libs/scripts/azure/runScripts.js --log-level debug --onboard \" --output /var/log/onboard.log --log-level debug --host ', reference(concat(parameters('nicNamePrefix'),copyIndex(2))).ipConfigurations[0].properties.privateIpAddress, ' -u admin --password-url file:///config/mypass --hostname ', concat(parameters('bigipNamePrefix'),copyIndex(2), '.', parameters('domainFqdn')), ' --ntp pool.ntp.org --db provision.1nicautoconfig:disable --db tmm.maxremoteloglength:2048 --module ltm:nominal --module asm:nominal --module afm:none --module apm:nominal --signal ONBOARD_DONE \" --cluster \" --wait-for ONBOARD_DONE --output /var/log/cluster.log --log-level debug --host ', reference(concat(parameters('nicNamePrefix'),copyIndex(2))).ipConfigurations[0].properties.privateIpAddress, ' -u admin -p ', parameters('adminPassword'), ' --config-sync-ip ', reference(concat(parameters('nicNamePrefix'),copyIndex(2))).ipConfigurations[0].properties.privateIpAddress, ' --join-group --device-group Sync --sync --remote-host ', reference(concat(parameters('nicNamePrefix'),'1')).ipConfigurations[0].properties.privateIpAddress, ' --remote-user admin --remote-password-url file:///config/mypass --signal CLUSTER_DONE \" --script \" --wait-for CLUSTER_DONE --output /var/log/runScript.log --log-level debug --url ',parameters('scriptLoc'),' --cl-args ', parameters('singleQuote'),'-i ',reference(concat(parameters('nicNamePrefix'),copyIndex(2))).ipConfigurations[0].properties.privateIpAddress, parameters('commandArgs'), parameters('singleQuote'), ' --signal SCRIPT_DONE \"')]"
        }
      }
    }
  ],

    "outputs": {
    }
  }
